.control_center {
}

.control_menu {
    @include widget;
    min-height: $left_menu_height * 0.215 - $outer_gap;
    margin-left: $outer_gap;
    padding-top: 2 * $gap;
    padding-bottom: 2 * $gap;
    margin-top: $outer_gap;
    margin-bottom: $outer_gap;
    background-color: $background-t;
    min-width: $left_menu_width;
}

.wifi_button {
    @include control_button($surface_container);
    min-width: $left_menu_width - 4 * $gap;
    margin-bottom: 2 * $gap;
    color: $on_surface;
}
.wifi_button.on {
    @include control_button($color1);
    color: $background;
}

.dnd_button.on {
    @include control_button($color2);
    color: $background;
}
.dnd_button {
    @include control_button($surface_container);
    min-width: ($left_menu_width / 2) - 3.5 * $gap;
    margin-right: $gap;
    margin-bottom: 2 * $gap;
    color: $on_surface;
}

.bluetooth_button {
    @include control_button($surface_container);
    min-width: ($left_menu_width / 2) - 3.5 * $gap;
    margin-bottom: 2 * $gap;
    color: $on_surface;
}
.bluetooth_button.on {
    @include control_button($color3);
    color: $background;
}

.power_profiles_button {
    @include control_button($surface_container);
    min-width: ($left_menu_width / 2) - 3.5 * $gap;
    margin-right: $gap;
    color: $on_surface;
}
.power_profiles_button.perf {
    @include control_button(saturate($color4,70));
    color: $background;
}
.power_profiles_button.bal {
    @include control_button($color4);
    color: $background;
}

.control_button_icon {
    @include control_button_icon();
    margin-right: $gap;
}
.control_button_header {
    @include header;
    font-size: 0.8rem;
    transition: ease-in 0.3s;
}
.control_button_label {
    @include common;
    font-size: 0.7rem;
    transition: ease-in 0.3s;
}

.redshift_button {
    @include element;
    margin-right: $gap;
    min-width: ($left_menu_width / 4) - 4 * $gap;
    border-radius: if($rounding == 0, 0, if($rounding > $gap, $rounding - $gap, $rounding));
    padding: $padding * 1.3;
    padding-top: 1.8 * $padding;
    padding-bottom: 1.8 * $padding;
    border: $border solid saturate($surface_container, 50);
    background-color: $surface_container;    
    color: $on_surface;
    &:hover {
        background-color: $surface_variant;    
        transition: ease-in 0.3s;
    }
}
.redshift_button.on {
    border: $border solid saturate($color5, 50);
    background-color: $color5;    
    color: $on_surface;
}
.redshift_icon {
    background-color: transparent;
    font-size: 1.5rem;
}

.mute_button {
    @include element;
    min-width: ($left_menu_width / 4) - 4 * $gap;
    border-radius: if($rounding == 0, 0, if($rounding > $gap, $rounding - $gap, $rounding));
    padding: $padding * 1.3;
    padding-top: 1.8 * $padding;
    padding-bottom: 1.8 * $padding;
    border: $border solid saturate($surface_container, 50);
    background-color: $surface_container;    
    color: $on_surface;
    &:hover {
        background-color: $surface_variant;    
        transition: ease-in 0.3s;
    }
    transition: ease-in 0.3s;
}
.mute_button.on {
    border: $border solid saturate($color6, 50);
    background-color: $color6;    
    color: $background;
}

.mute_icon {
    background-color: transparent;
    font-size: 1.5rem;
}
